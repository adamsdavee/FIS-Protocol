{
  "address": "0x5e02fbEf2689D5C34125bE01207241C573f7eafD",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FAILED",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FundMe__notOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "INSUFFICIENT_FUNDS",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_AVAILABLE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_IN_PERCENT_RANGE",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NOT_MEMBER",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "USER_EXISTS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "circleMemberAdded",
          "type": "bool"
        }
      ],
      "name": "CircleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FISWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "setGoal",
          "type": "uint256"
        }
      ],
      "name": "Goal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "GroupCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "GroupJoined",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        }
      ],
      "name": "GroupVisibilityStatus",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "investmentWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "InvestmentWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct FISContract.Group",
          "name": "groupDetails",
          "type": "tuple"
        }
      ],
      "name": "LeftGroup",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "telosDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeSaved",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "SaveTelos",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "saveDuration",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeSaved",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenBalance",
          "type": "uint256"
        }
      ],
      "name": "SaveToken",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TelosWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "circleAddress",
          "type": "address"
        }
      ],
      "name": "addToCircle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "_open",
          "type": "bool"
        },
        {
          "internalType": "enum FISContract.Status",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "changeInvestmentStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_category",
          "type": "uint256"
        }
      ],
      "name": "createGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_title",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_depositPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_percentInterest",
          "type": "uint256"
        }
      ],
      "name": "createInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "enum FISContract.GroupVisibility",
          "name": "_visibility",
          "type": "uint8"
        }
      ],
      "name": "editGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllGroups",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Group[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllInvestments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllUserInvestments",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getGroupById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "targetAmount",
              "type": "uint256"
            },
            {
              "internalType": "enum FISContract.GroupVisibility",
              "name": "visibility",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "category",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "groupMembers",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "creator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeCreated",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Group",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getInvestmentById",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "title",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "description",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "depositPrice",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "percentInterest",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "investmentParticipants",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "open",
              "type": "bool"
            },
            {
              "internalType": "enum FISContract.Status",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "totalDeposit",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.Investment",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInvestmentWallet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUser",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "walletAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "telosBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "telosDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeSaved",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "rewardsEarned",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "groups",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "circle",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "Goal",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentCollateral",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "investments",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct FISContract.User",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getUserTokensData",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "tokenAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenBalance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "saveDuration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timeSaved",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "tokenRewards",
              "type": "uint256"
            }
          ],
          "internalType": "struct FISContract.TokenSavingsData[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "invest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "joinGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "leaveGroup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "saveTelos",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "saveTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "goalAmount",
          "type": "uint256"
        }
      ],
      "name": "setGoal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawForInvestment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTelos",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokenRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x1e3927106f2c580353e9d3119ff6686e7f9ceda4f8a14ed7b85703c731810129",
  "receipt": {
    "to": null,
    "from": "0x7476deB582C24610511D16266E972DF5d2895bc7",
    "contractAddress": "0x5e02fbEf2689D5C34125bE01207241C573f7eafD",
    "transactionIndex": 0,
    "gasUsed": "5251366",
    "logsBloom": "0x
    "blockHash": "0x0038ab22b70a5ac4323c40695b73f8a41c71cda0bc74fcf0270a4e8349e44ccc",
    "transactionHash": "0x1e3927106f2c580353e9d3119ff6686e7f9ceda4f8a14ed7b85703c731810129",
    "logs": [],
    "blockNumber": 267059082,
    "cumulativeGasUsed": "5251366",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x61dbec6dE6ac82F904b403e97a778B373793cc57"
  ],
  "numDeployments": 3,
  "solcInputHash": "8c91112407555fe0d2bcbf58d36c4220",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FAILED\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__notOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"INSUFFICIENT_FUNDS\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_AVAILABLE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_IN_PERCENT_RANGE\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NOT_MEMBER\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"USER_EXISTS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"circleMemberAdded\",\"type\":\"bool\"}],\"name\":\"CircleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FISWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"setGoal\",\"type\":\"uint256\"}],\"name\":\"Goal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"GroupCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"GroupJoined\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"}],\"name\":\"GroupVisibilityStatus\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"investmentWithdrawn\",\"type\":\"uint256\"}],\"name\":\"InvestmentWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct FISContract.Group\",\"name\":\"groupDetails\",\"type\":\"tuple\"}],\"name\":\"LeftGroup\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"telosDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"name\":\"SaveTelos\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saveDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"}],\"name\":\"SaveToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TelosWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"circleAddress\",\"type\":\"address\"}],\"name\":\"addToCircle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"changeInvestmentStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_category\",\"type\":\"uint256\"}],\"name\":\"createGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_percentInterest\",\"type\":\"uint256\"}],\"name\":\"createInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"_visibility\",\"type\":\"uint8\"}],\"name\":\"editGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllGroups\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Group[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllInvestments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllUserInvestments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getGroupById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum FISContract.GroupVisibility\",\"name\":\"visibility\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"groupMembers\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeCreated\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Group\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getInvestmentById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"depositPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"percentInterest\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investmentParticipants\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"open\",\"type\":\"bool\"},{\"internalType\":\"enum FISContract.Status\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalDeposit\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.Investment\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInvestmentWallet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUser\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"telosBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"telosDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"rewardsEarned\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"groups\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"circle\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"Goal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentCollateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"investments\",\"type\":\"uint256[]\"}],\"internalType\":\"struct FISContract.User\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getUserTokensData\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"saveDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timeSaved\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenRewards\",\"type\":\"uint256\"}],\"internalType\":\"struct FISContract.TokenSavingsData[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"joinGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"leaveGroup\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"saveTelos\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"saveTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"goalAmount\",\"type\":\"uint256\"}],\"name\":\"setGoal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawForInvestment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTelos\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokenRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FIS_Protocol.sol\":\"FISContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"contracts/FIS_Protocol.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.7;\\n\\n// contract address: 0xB85Ec3a47a40f8e2fAfA89869BF63deAeb34e4c3\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface MintingInterface {\\n    function mint(address account, uint256 amount) external;\\n}\\n\\nerror FundMe__notOwner();\\nerror NotOwner();\\nerror INSUFFICIENT_FUNDS();\\nerror USER_EXISTS();\\nerror NOT_MEMBER();\\nerror IN_PROGRESS();\\nerror FAILED();\\nerror NOT_IN_PERCENT_RANGE();\\nerror NOT_AVAILABLE();\\n\\ncontract FISContract {\\n    uint256 private groupCount;\\n    address private immutable i_owner;\\n    MintingInterface private minter;\\n    uint256 private rate = 1;\\n    uint256 private percentageRewardPerDay = 2;\\n    uint256 private investmentCount;\\n    uint256 private investmentWallet;\\n\\n    enum GroupVisibility {\\n        CIRCLE,\\n        PUBLIC\\n    }\\n\\n    enum Status {\\n        IN_PROGRESS,\\n        SUCCESS,\\n        FAILED\\n    }\\n\\n    struct TokenSavingsData {\\n        address tokenAddress;\\n        uint256 tokenBalance;\\n        uint256 saveDuration;\\n        uint256 timeSaved;\\n        uint256 tokenRewards;\\n    }\\n\\n    struct User {\\n        address walletAddress;\\n        uint256 telosBalance;\\n        uint256 telosDuration;\\n        uint256 timeSaved;\\n        address[] tokens;\\n        uint256 rewardsEarned;\\n        uint256[] groups;\\n        address[] circle;\\n        uint256 Goal;\\n        uint256 investmentCollateral;\\n        uint256[] investments;\\n    }\\n\\n    struct Group {\\n        uint256 id;\\n        uint256 duration;\\n        uint256 targetAmount;\\n        GroupVisibility visibility;\\n        string title;\\n        string description;\\n        uint category;\\n        address[] groupMembers;\\n        address creator;\\n        uint timeCreated;\\n    }\\n\\n    struct Investment {\\n        uint256 id;\\n        string title;\\n        string description;\\n        uint256 depositPrice;\\n        uint256 duration;\\n        uint256 percentInterest;\\n        address[] investmentParticipants;\\n        bool open;\\n        Status status;\\n        uint256 totalDeposit;\\n    }\\n\\n    mapping(uint => Group) private groupById;\\n\\n    mapping(address => mapping(address => TokenSavingsData))\\n        private userAddressToTokenToData;\\n\\n    mapping(address => User) private userAddressToUserData;\\n\\n    mapping(address => Investment) private userInvestments;\\n\\n    mapping(uint256 => Investment) private idToInvestment;\\n\\n    Group[] private allGroups;\\n    Investment[] private allInvestments;\\n\\n    event SaveToken(\\n        address indexed tokenAddress,\\n        uint256 saveDuration,\\n        uint256 timeSaved,\\n        uint256 tokenBalance\\n    );\\n    event SaveTelos(\\n        uint256 telosDuration,\\n        uint256 timeSaved,\\n        uint256 tokenBalance\\n    );\\n    event Goal(uint256 setGoal);\\n    event GroupCreated(Group groupDetails);\\n    event GroupVisibilityStatus(\\n        uint256 indexed id,\\n        GroupVisibility _visibility\\n    );\\n    event CircleAdded(bool circleMemberAdded);\\n    event GroupJoined(Group groupDetails);\\n    event TelosWithdrawn(uint256 amount);\\n    event TokensWithdrawn(uint256 amount);\\n    event FISWithdrawn(uint256 amount);\\n    event LeftGroup(Group groupDetails);\\n    event InvestmentWithdrawn(uint256 investmentWithdrawn);\\n\\n    constructor(address tokenAddress) {\\n        minter = MintingInterface(tokenAddress);\\n        i_owner = msg.sender;\\n    }\\n\\n    modifier onlyOwner() {\\n        if (msg.sender == i_owner) revert NotOwner();\\n        _;\\n    }\\n\\n    function saveTokens(\\n        address tokenAddress,\\n        uint256 amount,\\n        uint duration\\n    ) external {\\n        if (amount == 0) revert INSUFFICIENT_FUNDS();\\n        IERC20 allTokens = IERC20(tokenAddress);\\n        uint allowance = allTokens.allowance(msg.sender, address(this));\\n        if (allowance >= amount) revert FundMe__notOwner();\\n\\n        userAddressToTokenToData[msg.sender][tokenAddress].saveDuration =\\n            block.timestamp +\\n            (duration * 1 days);\\n        userAddressToTokenToData[msg.sender][tokenAddress].timeSaved = 0;\\n        userAddressToTokenToData[msg.sender][tokenAddress]\\n            .tokenBalance += amount;\\n\\n        allTokens.transferFrom(msg.sender, address(this), amount);\\n\\n        emit SaveToken(\\n            tokenAddress,\\n            userAddressToTokenToData[msg.sender][tokenAddress].saveDuration,\\n            duration,\\n            userAddressToTokenToData[msg.sender][tokenAddress].tokenBalance\\n        );\\n    }\\n\\n    function saveTelos(uint256 duration) external payable {\\n        if (msg.value == 0) revert INSUFFICIENT_FUNDS();\\n        userAddressToUserData[msg.sender].telosBalance += msg.value;\\n        userAddressToUserData[msg.sender].telosDuration = duration;\\n        userAddressToUserData[msg.sender].timeSaved = block.timestamp;\\n\\n        emit SaveTelos(\\n            duration,\\n            block.timestamp,\\n            userAddressToUserData[msg.sender].telosBalance\\n        );\\n    }\\n\\n    function setGoal(uint256 goalAmount) external {\\n        userAddressToUserData[msg.sender].Goal = goalAmount;\\n\\n        emit Goal(goalAmount);\\n    }\\n\\n    function createGroup(\\n        uint256 _duration,\\n        uint256 _targetAmount,\\n        GroupVisibility _visibility,\\n        string calldata _title,\\n        string calldata _description,\\n        uint _category\\n    ) external {\\n        groupCount++;\\n        _duration = (_duration * 1 days) + block.timestamp;\\n\\n        groupById[groupCount] = Group(\\n            groupCount,\\n            _duration,\\n            _targetAmount,\\n            _visibility,\\n            _title,\\n            _description,\\n            _category,\\n            new address[](0),\\n            msg.sender,\\n            block.timestamp\\n        );\\n\\n        User storage groupOwner = userAddressToUserData[msg.sender];\\n        groupOwner.groups.push(groupCount);\\n\\n        allGroups.push(\\n            Group(\\n                groupCount,\\n                _duration,\\n                _targetAmount,\\n                _visibility,\\n                _title,\\n                _description,\\n                _category,\\n                new address[](0),\\n                msg.sender,\\n                block.timestamp\\n            )\\n        );\\n\\n        emit GroupCreated(\\n            Group(\\n                groupCount,\\n                _duration,\\n                _targetAmount,\\n                _visibility,\\n                _title,\\n                _description,\\n                _category,\\n                new address[](0),\\n                msg.sender,\\n                block.timestamp\\n            )\\n        );\\n    }\\n\\n    function editGroup(uint256 id, GroupVisibility _visibility) external {\\n        Group storage groupToBeEdited = groupById[id];\\n        groupToBeEdited.visibility = _visibility;\\n        allGroups[id - 1].visibility = _visibility;\\n\\n        emit GroupVisibilityStatus(id, _visibility);\\n    }\\n\\n    function addToCircle(address circleAddress) external {\\n        User storage addingToCircle = userAddressToUserData[msg.sender];\\n        addingToCircle.circle.push(circleAddress);\\n        bool added = true;\\n\\n        emit CircleAdded(added);\\n    }\\n\\n    function joinGroup(uint id) external {\\n        bool verify = belongToGroup(id);\\n        if (verify) revert USER_EXISTS();\\n        User storage UpdatingUserData = userAddressToUserData[msg.sender];\\n        Group storage addingUserToGroup = groupById[id];\\n\\n        if (addingUserToGroup.visibility == GroupVisibility.PUBLIC) {\\n            UpdatingUserData.groups.push(id);\\n            addingUserToGroup.groupMembers.push(msg.sender);\\n        } else {\\n            address creatorAddress = addingUserToGroup.creator;\\n            address[] memory membersOfCircle = userAddressToUserData[\\n                creatorAddress\\n            ].circle;\\n            bool foundCircleMember = false;\\n            for (uint i = 0; i < membersOfCircle.length; i++) {\\n                if (msg.sender == membersOfCircle[i]) {\\n                    foundCircleMember = true;\\n                    break;\\n                }\\n            }\\n            if (foundCircleMember) {\\n                UpdatingUserData.groups.push(id);\\n                addingUserToGroup.groupMembers.push(msg.sender);\\n            } else revert NOT_MEMBER();\\n        }\\n\\n        emit GroupJoined(addingUserToGroup);\\n    }\\n\\n    function leaveGroup(uint id) external {\\n        bool verify = belongToGroup(id);\\n        if (!verify) revert NOT_MEMBER();\\n        uint256[] storage updatingUserData = userAddressToUserData[msg.sender]\\n            .groups;\\n        address[] storage removeUser = groupById[id].groupMembers;\\n        for (uint i = 0; i < updatingUserData.length; i++) {\\n            if (updatingUserData[i] == id) {\\n                delete updatingUserData[i];\\n                break;\\n            }\\n        }\\n        for (uint i = 0; i < removeUser.length; i++) {\\n            if (removeUser[i] == msg.sender) {\\n                delete removeUser[i];\\n                break;\\n            }\\n        }\\n\\n        emit LeftGroup(groupById[id]);\\n    }\\n\\n    function withdrawTelos(uint amount) external {\\n        // require time and calc charge\\n        uint balance = userAddressToUserData[msg.sender].telosBalance;\\n        if (amount > balance) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToUserData[msg.sender].telosBalance -= amount;\\n        }\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        if (!success) revert FAILED();\\n\\n        emit TelosWithdrawn(amount);\\n    }\\n\\n    function withdrawTokens(address tokenAddress, uint amount) external {\\n        uint balance = userAddressToTokenToData[msg.sender][tokenAddress]\\n            .tokenBalance;\\n        if (amount > balance) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToTokenToData[msg.sender][tokenAddress]\\n                .tokenBalance -= amount;\\n        }\\n        IERC20 token = IERC20(tokenAddress);\\n        token.transfer(msg.sender, amount);\\n\\n        emit TokensWithdrawn(amount);\\n    }\\n\\n    function withdrawTokenRewards(\\n        address tokenAddress,\\n        uint256 amount\\n    ) external {\\n        if (amount >= userAddressToUserData[msg.sender].rewardsEarned)\\n            revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            userAddressToUserData[msg.sender].rewardsEarned -= amount;\\n            userAddressToTokenToData[msg.sender][tokenAddress]\\n                .tokenBalance -= amount;\\n        }\\n\\n        minter.mint(msg.sender, amount);\\n\\n        emit FISWithdrawn(amount);\\n    }\\n\\n    function createInvestment(\\n        string memory _title,\\n        string memory _description,\\n        uint256 _depositPrice,\\n        uint256 _duration,\\n        uint256 _percentInterest\\n    ) external {\\n        if (_percentInterest >= 10 && _percentInterest <= 20) {\\n            investmentCount++;\\n            idToInvestment[investmentCount] = Investment(\\n                investmentCount,\\n                _title,\\n                _description,\\n                _depositPrice,\\n                _duration,\\n                _percentInterest,\\n                new address[](0),\\n                true,\\n                Status.IN_PROGRESS,\\n                0\\n            );\\n            allInvestments.push(\\n                Investment(\\n                    investmentCount,\\n                    _title,\\n                    _description,\\n                    _depositPrice,\\n                    _duration,\\n                    _percentInterest,\\n                    new address[](0),\\n                    true,\\n                    Status.IN_PROGRESS,\\n                    0\\n                )\\n            );\\n        } else revert NOT_IN_PERCENT_RANGE();\\n    }\\n\\n    // Customer joins investment\\n    function invest(uint id) external {\\n        User storage user = userAddressToUserData[msg.sender];\\n        uint256[] memory userInvestmentsIds = user.investments;\\n        for (uint i = 0; i < userInvestmentsIds.length; i++) {\\n            bool verify = false;\\n            if (userInvestmentsIds[i] == id) verify = true;\\n            if (verify) revert USER_EXISTS();\\n        }\\n        if (!(idToInvestment[id].open)) revert NOT_AVAILABLE();\\n        if (user.telosBalance >= idToInvestment[id].depositPrice)\\n            revert INSUFFICIENT_FUNDS();\\n\\n        user.investments.push(id);\\n        idToInvestment[id].investmentParticipants.push(msg.sender);\\n\\n        // add to investmentWallet\\n        investmentWallet += idToInvestment[id].depositPrice;\\n\\n        // transfer collateral\\n        user.telosBalance -= idToInvestment[id].depositPrice;\\n        user.investmentCollateral += idToInvestment[id].depositPrice;\\n    }\\n\\n    // Admin disburses profit #onlyOwner\\n    // function disburseProfit(uint256 id) external payable {\\n    //     Investment storage investment = idToInvestment[id];\\n    //     address[] memory owners = investment.investmentParticipants;\\n    //     if (investment.open) revert NOT_AVAILABLE();\\n    //     if (investment.status == Status.IN_PROGRESS) revert IN_PROGRESS();\\n    //     uint256 unitProfit = calcDisburseProfit(\\n    //         investment.depositPrice,\\n    //         investment.percentInterest\\n    //     );\\n    //     uint256 totalProfit = unitProfit * owners.length;\\n\\n    //     for (uint i = 0; i < owners.length; i++) {\\n    //         User storage user = userAddressToUserData[owners[i]];\\n    //         if (investment.status == Status.SUCCESS) {\\n    //             if (msg.value != totalProfit) revert INSUFFICIENT_FUNDS();\\n    //             user.telosBalance += unitProfit;\\n    //             user.investmentCollateral -= investment.depositPrice;\\n    //         }\\n    //         if (investment.status == Status.FAILED) {\\n    //             user.rewardsEarned += user.investmentCollateral;\\n    //             user.investmentCollateral -= investment.depositPrice;\\n    //         }\\n    //     }\\n    // }\\n\\n    // change status of investment and open or not of the investment\\n    function changeInvestmentStatus(\\n        uint256 id,\\n        bool _open,\\n        Status _status\\n    ) external onlyOwner {\\n        Investment storage investment = idToInvestment[id];\\n        investment.open = _open;\\n        investment.status = _status;\\n    }\\n\\n    function withdrawForInvestment(uint amount) external onlyOwner {\\n        if (investmentWallet >= amount) revert INSUFFICIENT_FUNDS();\\n        unchecked {\\n            investmentWallet -= amount;\\n        }\\n        (bool success, ) = msg.sender.call{value: amount}(\\\"\\\");\\n        if (!success) revert FAILED();\\n\\n        emit InvestmentWithdrawn(amount);\\n    }\\n\\n    // Methods\\n    function belongToGroup(uint id) internal view returns (bool) {\\n        uint[] memory userGroups = userAddressToUserData[msg.sender].groups;\\n        bool verify = false;\\n        for (uint i = 0; i < userGroups.length; i++) {\\n            if (id == userGroups[i]) {\\n                verify = true;\\n                break;\\n            }\\n        }\\n        return verify;\\n    }\\n\\n    // Getter functions\\n    // function circleMembers() external view returns (address[] memory) {\\n    //     return userAddressToUserData[msg.sender].circle;\\n    // }\\n\\n    function getGroupById(uint id) external view returns (Group memory) {\\n        return groupById[id];\\n    }\\n\\n    function getAllGroups() external view returns (Group[] memory) {\\n        return allGroups;\\n    }\\n\\n    function getUser() external view returns (User memory) {\\n        return userAddressToUserData[msg.sender];\\n    }\\n\\n    function getUserTokensData() external returns (TokenSavingsData[] memory) {\\n        User storage userData = userAddressToUserData[msg.sender];\\n        address[] memory userTokensAddresses = userData.tokens;\\n\\n        TokenSavingsData[] memory listOfUserTokensData = new TokenSavingsData[](\\n            userTokensAddresses.length\\n        );\\n\\n        for (uint i = 0; i < userTokensAddresses.length; i++) {\\n            TokenSavingsData storage tokenData = userAddressToTokenToData[\\n                msg.sender\\n            ][userTokensAddresses[i]];\\n\\n            // update rewards\\n            uint256 secondsPassed = (block.timestamp - tokenData.timeSaved);\\n            if (secondsPassed >= 86400) {\\n                uint256 newRewards = (tokenData.tokenBalance *\\n                    secondsPassed *\\n                    (calcRewardsPerSeconds(percentageRewardPerDay) * rate)) /\\n                    1e18;\\n                userData.rewardsEarned += newRewards;\\n                tokenData.timeSaved = block.timestamp;\\n                tokenData.tokenRewards += newRewards;\\n            }\\n\\n            listOfUserTokensData[i] = tokenData;\\n        }\\n        return listOfUserTokensData;\\n    }\\n\\n    // function getBalanceOfContract(address tokenAddress) external view returns (uint256) {\\n    //     IERC20 balanceOfTokenInContract = IERC20(tokenAddress);\\n    //     return balanceOfTokenInContract.balanceOf(address(this));\\n    // }\\n\\n    // function changePerentageRewardPerDay(uint256 _tokenRewards) external {\\n    //     percentageRewardPerDay = _tokenRewards;\\n    // }\\n\\n    function calcRewardsPerSeconds(\\n        uint dailyRate\\n    ) internal pure returns (uint256) {\\n        return (dailyRate * 1e16) / (24 * 60 * 60);\\n    }\\n\\n    function getAllInvestments() external view returns (Investment[] memory) {\\n        return allInvestments;\\n    }\\n\\n    function getInvestmentById(\\n        uint id\\n    ) external view returns (Investment memory) {\\n        return idToInvestment[id];\\n    }\\n\\n    function getAllUserInvestments()\\n        external\\n        view\\n        returns (Investment[] memory)\\n    {\\n        uint256[] memory allUserInvestmentsIds = userAddressToUserData[\\n            msg.sender\\n        ].investments;\\n        Investment[] memory allUserInvestments = new Investment[](\\n            allUserInvestmentsIds.length\\n        );\\n        for (uint i = 0; i < allUserInvestmentsIds.length; i++) {\\n            allUserInvestments[i] = idToInvestment[allUserInvestmentsIds[i]];\\n        }\\n\\n        return allUserInvestments;\\n    }\\n\\n    function getInvestmentWallet() external view returns (uint256) {\\n        return investmentWallet;\\n    }\\n\\n    function calcDisburseProfit(\\n        uint256 depositPrice,\\n        uint256 percentInterest\\n    ) internal pure returns (uint256) {\\n        uint256 totalProfit = depositPrice + (percentInterest * depositPrice);\\n        return totalProfit;\\n    }\\n}\\n\",\"keccak256\":\"0xe7d014b386df3396e99c5e529097361e491d079db246fd961f657f614ca38001\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a0604052600160025560026003553480156200001b57600080fd5b5060405162005e6438038062005e64833981810160405281019062000041919062000127565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000159565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000ef82620000c2565b9050919050565b6200010181620000e2565b81146200010d57600080fd5b50565b6000815190506200012181620000f6565b92915050565b60006020828403121562000140576200013f620000bd565b5b6000620001508482850162000110565b91505092915050565b608051615ce86200017c600039600081816107290152611e120152615ce86000f3fe6080604052600436106101405760003560e01c80635e669095116100b6578063b5bfcc3a1161006f578063b5bfcc3a1461041c578063d6c48c7f14610447578063e1045c4014610484578063eed02e4b146104ad578063f4dbd508146104d6578063f55c5321146104f257610140565b80635e6690951461030c5780636cc29ea014610335578063832880e7146103725780638d9ad08e1461039d578063a3adcb8f146103c8578063b1732352146103f357610140565b806333471df51161010857806333471df51461021457806337a85c711461023d578063386e2fc31461026657806340931cbb146102915780634b29c448146102ba57806355f860c0146102e357610140565b806306b091f9146101455780630f5766651461016e57806316c4998b1461019757806321cd3cae146101c05780632afcf480146101eb575b600080fd5b34801561015157600080fd5b5061016c600480360381019061016791906141ac565b61051b565b005b34801561017a57600080fd5b50610195600480360381019061019091906141ec565b610727565b005b3480156101a357600080fd5b506101be60048036038101906101b991906141ec565b6108d5565b005b3480156101cc57600080fd5b506101d5610a85565b6040516101e29190614597565b60405180910390f35b3480156101f757600080fd5b50610212600480360381019061020d91906141ec565b610d5a565b005b34801561022057600080fd5b5061023b600480360381019061023691906141ec565b61105a565b005b34801561024957600080fd5b50610264600480360381019061025f91906145b9565b611292565b005b34801561027257600080fd5b5061027b61137c565b60405161028891906146fd565b60405180910390f35b34801561029d57600080fd5b506102b860048036038101906102b391906147a9565b6116bc565b005b3480156102c657600080fd5b506102e160048036038101906102dc91906141ec565b611d8f565b005b3480156102ef57600080fd5b5061030a600480360381019061030591906148d5565b611e10565b005b34801561031857600080fd5b50610333600480360381019061032e91906141ac565b611efa565b005b34801561034157600080fd5b5061035c600480360381019061035791906141ec565b61211c565b6040516103699190614a10565b60405180910390f35b34801561037e57600080fd5b506103876123bf565b6040516103949190614be5565b60405180910390f35b3480156103a957600080fd5b506103b2612675565b6040516103bf9190614e08565b60405180910390f35b3480156103d457600080fd5b506103dd61290f565b6040516103ea9190614e08565b60405180910390f35b3480156103ff57600080fd5b5061041a60048036038101906104159190614e2a565b612cb8565b005b34801561042857600080fd5b50610431613140565b60405161043e9190614e8c565b60405180910390f35b34801561045357600080fd5b5061046e600480360381019061046991906141ec565b61314a565b60405161047b9190614f8f565b60405180910390f35b34801561049057600080fd5b506104ab60048036038101906104a691906150e1565b6133b2565b005b3480156104b957600080fd5b506104d460048036038101906104cf91906141ec565b61374e565b005b6104f060048036038101906104eb91906141ec565b613b37565b005b3480156104fe57600080fd5b5061051960048036038101906105149190615194565b613cd8565b005b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101549050808211156105d9576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060008390508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b81526004016106a69291906151e3565b6020604051808303816000875af11580156106c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e99190615221565b507f9c6393f251205f9e03559951cab4c9ae71767b6174f77944a5b0c2fa51fbda9f836040516107199190614e8c565b60405180910390a150505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036107ac576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600554106107e7576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060056000828254039250508190555060003373ffffffffffffffffffffffffffffffffffffffff168260405161081d9061527f565b60006040518083038185875af1925050503d806000811461085a576040519150601f19603f3d011682016040523d82523d6000602084013e61085f565b606091505b505090508061089a576040517f3969307d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f87a9be6f8514f2b4bd9a7ce90293c355391c84f006fae1f7453b6b0570e8fc3f826040516108c99190614e8c565b60405180910390a15050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154905080821115610956576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254039250508190555060003373ffffffffffffffffffffffffffffffffffffffff16836040516109cc9061527f565b60006040518083038185875af1925050503d8060008114610a09576040519150601f19603f3d011682016040523d82523d6000602084013e610a0e565b606091505b5050905080610a49576040517f3969307d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f725f63f7df294938d2e09b5b1f09ffcdb5f881ad6629b9e75fc3626f57d2e5fc83604051610a789190614e8c565b60405180910390a1505050565b6060600b805480602002602001604051908101604052809291908181526020016000905b82821015610d5157838290600052602060002090600a0201604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff166001811115610b1057610b0f614254565b5b6001811115610b2257610b21614254565b5b8152602001600482018054610b36906152c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610b62906152c3565b8015610baf5780601f10610b8457610100808354040283529160200191610baf565b820191906000526020600020905b815481529060010190602001808311610b9257829003601f168201915b50505050508152602001600582018054610bc8906152c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610bf4906152c3565b8015610c415780601f10610c1657610100808354040283529160200191610c41565b820191906000526020600020905b815481529060010190602001808311610c2457829003601f168201915b505050505081526020016006820154815260200160078201805480602002602001604051908101604052809291908181526020018280548015610cd957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610c8f575b505050505081526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160098201548152505081526020019060010190610aa9565b50505050905090565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600a01805480602002602001604051908101604052809291908181526020018280548015610ded57602002820191906000526020600020905b815481526020019060010190808311610dd9575b5050505050905060005b8151811015610e7457600084838381518110610e1657610e156152f4565b5b602002602001015103610e2857600190505b8015610e60576040517f74c16f6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b508080610e6c90615352565b915050610df7565b50600a600084815260200190815260200160002060070160009054906101000a900460ff16610ecf576040517fe5313df000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600a600084815260200190815260200160002060030154826001015410610f22576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600a01839080600181540180825580915050600190039060005260206000200160009091909190915055600a6000848152602001908152602001600020600601339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60008481526020019081526020016000206003015460056000828254610fec919061539a565b92505081905550600a60008481526020019081526020016000206003015482600101600082825461101d91906153ce565b92505081905550600a60008481526020019081526020016000206003015482600901600082825461104e919061539a565b92505081905550505050565b600061106582613db1565b90508061109e576040517fb9034a7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206006019050600060066000858152602001908152602001600020600701905060005b828054905081101561116a5784838281548110611121576111206152f4565b5b90600052602060002001540361115757828181548110611144576111436152f4565b5b906000526020600020016000905561116a565b808061116290615352565b915050611101565b5060005b8180549050811015611242573373ffffffffffffffffffffffffffffffffffffffff168282815481106111a4576111a36152f4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361122f578181815481106111fd576111fc6152f4565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055611242565b808061123a90615352565b91505061116e565b507fd0e91b82e81664b2f64467c1c586eb5ab5d45ec4bae333aa37435cedc46eeb95600660008681526020019081526020016000206040516112849190615704565b60405180910390a150505050565b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905080600701829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600190507f20fd5cdbf6d6073eef285d26843b7a19f442bd5304e98758a58f144a8b1db9b58160405161136f9190615735565b60405180910390a1505050565b60606000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160040180548060200260200160405190810160405280929190818152602001828054801561144757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116113fd575b505050505090506000815167ffffffffffffffff81111561146b5761146a614fb6565b5b6040519080825280602002602001820160405280156114a457816020015b611491613ec6565b8152602001906001900390816114895790505b50905060005b82518110156116b2576000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000858481518110611509576115086152f4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600301544261155f91906153ce565b90506201518081106115f5576000670de0b6b3a7640000600254611584600354613e9c565b61158e9190615750565b83856001015461159e9190615750565b6115a89190615750565b6115b291906157c1565b9050808760050160008282546115c8919061539a565b92505081905550428360030181905550808360040160008282546115ec919061539a565b92505081905550505b816040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015481525050848481518110611692576116916152f4565b5b6020026020010181905250505080806116aa90615352565b9150506114aa565b5080935050505090565b6000808154809291906116ce90615352565b91905055504262015180896116e39190615750565b6116ed919061539a565b9750604051806101400160405280600054815260200189815260200188815260200187600181111561172257611721614254565b5b815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200184848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001828152602001600067ffffffffffffffff8111156117dc576117db614fb6565b5b60405190808252806020026020018201604052801561180a5781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250600660008054815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff0219169083600181111561188d5761188c614254565b5b021790555060808201518160040190816118a79190615989565b5060a08201518160050190816118bd9190615989565b5060c0820151816006015560e08201518160070190805190602001906118e4929190613f0b565b506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061012082015181600901559050506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050806006016000549080600181540180825580915050600190039060005260206000200160009091909190915055600b60405180610140016040528060005481526020018b81526020018a81526020018960018111156119e0576119df614254565b5b815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001600067ffffffffffffffff811115611a9a57611a99614fb6565b5b604051908082528060200260200182016040528015611ac85781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281525090806001815401808255809150506001900390600052602060002090600a020160009091909190915060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548160ff02191690836001811115611b6057611b5f614254565b5b02179055506080820151816004019081611b7a9190615989565b5060a0820151816005019081611b909190615989565b5060c0820151816006015560e0820151816007019080519060200190611bb7929190613f0b565b506101008201518160080160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610120820151816009015550507f5dee5e611798aa174dc2377aab8d1706cd9b19ebab3c8ab8c97fbffe286f2fb760405180610140016040528060005481526020018b81526020018a8152602001896001811115611c6157611c60614254565b5b815260200188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508152602001848152602001600067ffffffffffffffff811115611d1b57611d1a614fb6565b5b604051908082528060200260200182016040528015611d495781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250604051611d7c9190614a10565b60405180910390a1505050505050505050565b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600801819055507ffb9a913f54617632549c7e1ece79ea1a54c1d56d517f2dff464f0a3d82634df781604051611e059190614e8c565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603611e95576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600a60008581526020019081526020016000209050828160070160006101000a81548160ff021916908315150217905550818160070160016101000a81548160ff02191690836002811115611eef57611eee614254565b5b021790555050505050565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600501548110611f75576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206005016000828254039250508190555080600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160008282540392505081905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933836040518363ffffffff1660e01b81526004016120af9291906151e3565b600060405180830381600087803b1580156120c957600080fd5b505af11580156120dd573d6000803e3d6000fd5b505050507f7b170314096270fcb731b4f137213245a2d7d6bd865cf3b2f1ef48dbda28fd81816040516121109190614e8c565b60405180910390a15050565b612124613f95565b60066000838152602001908152602001600020604051806101400160405290816000820154815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff16600181111561218657612185614254565b5b600181111561219857612197614254565b5b81526020016004820180546121ac906152c3565b80601f01602080910402602001604051908101604052809291908181526020018280546121d8906152c3565b80156122255780601f106121fa57610100808354040283529160200191612225565b820191906000526020600020905b81548152906001019060200180831161220857829003601f168201915b5050505050815260200160058201805461223e906152c3565b80601f016020809104026020016040519081016040528092919081815260200182805461226a906152c3565b80156122b75780601f1061228c576101008083540402835291602001916122b7565b820191906000526020600020905b81548152906001019060200180831161229a57829003601f168201915b50505050508152602001600682015481526020016007820180548060200260200160405190810160405280929190818152602001828054801561234f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612305575b505050505081526020016008820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016009820154815250509050919050565b6123c7614010565b600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806101600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561250b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116124c1575b50505050508152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561256d57602002820191906000526020600020905b815481526020019060010190808311612559575b50505050508152602001600782018054806020026020016040519081016040528092919081815260200182805480156125fb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116125b1575b505050505081526020016008820154815260200160098201548152602001600a820180548060200260200160405190810160405280929190818152602001828054801561266757602002820191906000526020600020905b815481526020019060010190808311612653575b505050505081525050905090565b6060600c805480602002602001604051908101604052809291908181526020016000905b82821015612906578382906000526020600020906009020160405180610140016040529081600082015481526020016001820180546126d7906152c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612703906152c3565b80156127505780601f1061272557610100808354040283529160200191612750565b820191906000526020600020905b81548152906001019060200180831161273357829003601f168201915b50505050508152602001600282018054612769906152c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612795906152c3565b80156127e25780601f106127b7576101008083540402835291602001916127e2565b820191906000526020600020905b8154815290600101906020018083116127c557829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561288e57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612844575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff1660028111156128d7576128d6614254565b5b60028111156128e9576128e8614254565b5b815260200160088201548152505081526020019060010190612699565b50505050905090565b60606000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600a0180548060200260200160405190810160405280929190818152602001828054801561299f57602002820191906000526020600020905b81548152602001906001019080831161298b575b505050505090506000815167ffffffffffffffff8111156129c3576129c2614fb6565b5b6040519080825280602002602001820160405280156129fc57816020015b6129e9614080565b8152602001906001900390816129e15790505b50905060005b8251811015612caf57600a6000848381518110612a2257612a216152f4565b5b602002602001015181526020019081526020016000206040518061014001604052908160008201548152602001600182018054612a5e906152c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612a8a906152c3565b8015612ad75780601f10612aac57610100808354040283529160200191612ad7565b820191906000526020600020905b815481529060010190602001808311612aba57829003601f168201915b50505050508152602001600282018054612af0906152c3565b80601f0160208091040260200160405190810160405280929190818152602001828054612b1c906152c3565b8015612b695780601f10612b3e57610100808354040283529160200191612b69565b820191906000526020600020905b815481529060010190602001808311612b4c57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820154815260200160068201805480602002602001604051908101604052809291908181526020018280548015612c1557602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311612bcb575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff166002811115612c5e57612c5d614254565b5b6002811115612c7057612c6f614254565b5b8152602001600882015481525050828281518110612c9157612c906152f4565b5b60200260200101819052508080612ca790615352565b915050612a02565b50809250505090565b60008203612cf2576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600083905060008173ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401612d34929190615a5b565b602060405180830381865afa158015612d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d759190615a99565b9050838110612db0576040517f8186952400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6201518083612dbf9190615750565b42612dca919061539a565b600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555083600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254612f61919061539a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401612fa593929190615ac6565b6020604051808303816000875af1158015612fc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612fe89190615221565b508473ffffffffffffffffffffffffffffffffffffffff167f8a7a6da1d572d2a9793e0b6903910e6c69c42cb8e00d9e982525af036342a6dc600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015485600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015460405161313193929190615afd565b60405180910390a25050505050565b6000600554905090565b613152614080565b600a6000838152602001908152602001600020604051806101400160405290816000820154815260200160018201805461318b906152c3565b80601f01602080910402602001604051908101604052809291908181526020018280546131b7906152c3565b80156132045780601f106131d957610100808354040283529160200191613204565b820191906000526020600020905b8154815290600101906020018083116131e757829003601f168201915b5050505050815260200160028201805461321d906152c3565b80601f0160208091040260200160405190810160405280929190818152602001828054613249906152c3565b80156132965780601f1061326b57610100808354040283529160200191613296565b820191906000526020600020905b81548152906001019060200180831161327957829003601f168201915b505050505081526020016003820154815260200160048201548152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561334257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116132f8575b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff16600281111561338b5761338a614254565b5b600281111561339d5761339c614254565b5b81526020016008820154815250509050919050565b600a81101580156133c4575060148111155b1561371557600460008154809291906133dc90615352565b91905055506040518061014001604052806004548152602001868152602001858152602001848152602001838152602001828152602001600067ffffffffffffffff81111561342e5761342d614fb6565b5b60405190808252806020026020018201604052801561345c5781602001602082028036833780820191505090505b5081526020016001151581526020016000600281111561347f5761347e614254565b5b81526020016000815250600a600060045481526020019081526020016000206000820151816000015560208201518160010190816134bd9190615989565b5060408201518160020190816134d39190615989565b50606082015181600301556080820151816004015560a0820151816005015560c082015181600601908051906020019061350e929190613f0b565b5060e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160070160016101000a81548160ff0219169083600281111561355b5761355a614254565b5b02179055506101208201518160080155905050600c6040518061014001604052806004548152602001878152602001868152602001858152602001848152602001838152602001600067ffffffffffffffff8111156135bd576135bc614fb6565b5b6040519080825280602002602001820160405280156135eb5781602001602082028036833780820191505090505b5081526020016001151581526020016000600281111561360e5761360d614254565b5b8152602001600081525090806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000015560208201518160010190816136609190615989565b5060408201518160020190816136769190615989565b50606082015181600301556080820151816004015560a0820151816005015560c08201518160060190805190602001906136b1929190613f0b565b5060e08201518160070160006101000a81548160ff0219169083151502179055506101008201518160070160016101000a81548160ff021916908360028111156136fe576136fd614254565b5b021790555061012082015181600801555050613747565b6040517f5962b58700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050565b600061375982613db1565b90508015613793576040517f74c16f6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000600660008581526020019081526020016000209050600180811115613800576137ff614254565b5b8160030160009054906101000a900460ff16600181111561382457613823614254565b5b036138be578160060184908060018154018082558091505060019003906000526020600020016000909190919091505580600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613afa565b60008160080160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206007018054806020026020016040519081016040528092919081815260200182805480156139ab57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311613961575b505050505090506000805b8251811015613a28578281815181106139d2576139d16152f4565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1603613a155760019150613a28565b8080613a2090615352565b9150506139b6565b508015613ac4578460060187908060018154018082558091505060019003906000526020600020016000909190919091505583600701339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613af6565b6040517fb9034a7a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b7fe0ca612158979c237731ca444b6ddcc8f942bf790623349add2ee130ac9d4fcd81604051613b299190615c66565b60405180910390a150505050565b60003403613b71576040517fe793143800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254613bc3919061539a565b9250508190555080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555042600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055507f741129ebabac3d1d8298abf045729365e0c9139a4b99ddcffb9dbfaed2a40ef48142600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154604051613ccd93929190615afd565b60405180910390a150565b6000600660008481526020019081526020016000209050818160030160006101000a81548160ff02191690836001811115613d1657613d15614254565b5b021790555081600b600185613d2b91906153ce565b81548110613d3c57613d3b6152f4565b5b90600052602060002090600a020160030160006101000a81548160ff02191690836001811115613d6f57613d6e614254565b5b0217905550827f03b95dda2b061abd005b34747d048e0fc3822a7422c839c34b67d00ba35dc8ac83604051613da49190615c97565b60405180910390a2505050565b600080600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600601805480602002602001604051908101604052809291908181526020018280548015613e4057602002820191906000526020600020905b815481526020019060010190808311613e2c575b505050505090506000805b8251811015613e9157828181518110613e6757613e666152f4565b5b60200260200101518503613e7e5760019150613e91565b8080613e8990615352565b915050613e4b565b508092505050919050565b600062015180662386f26fc1000083613eb59190615750565b613ebf91906157c1565b9050919050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b828054828255906000526020600020908101928215613f84579160200282015b82811115613f835782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190613f2b565b5b509050613f9191906140e7565b5090565b60405180610140016040528060008152602001600081526020016000815260200160006001811115613fca57613fc9614254565b5b815260200160608152602001606081526020016000815260200160608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b604051806101600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001606081526020016000815260200160608152602001606081526020016000815260200160008152602001606081525090565b60405180610140016040528060008152602001606081526020016060815260200160008152602001600081526020016000815260200160608152602001600015158152602001600060028111156140da576140d9614254565b5b8152602001600081525090565b5b808211156141005760008160009055506001016140e8565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061414382614118565b9050919050565b61415381614138565b811461415e57600080fd5b50565b6000813590506141708161414a565b92915050565b6000819050919050565b61418981614176565b811461419457600080fd5b50565b6000813590506141a681614180565b92915050565b600080604083850312156141c3576141c261410e565b5b60006141d185828601614161565b92505060206141e285828601614197565b9150509250929050565b6000602082840312156142025761420161410e565b5b600061421084828501614197565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61424e81614176565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061429457614293614254565b5b50565b60008190506142a582614283565b919050565b60006142b582614297565b9050919050565b6142c5816142aa565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156143055780820151818401526020810190506142ea565b60008484015250505050565b6000601f19601f8301169050919050565b600061432d826142cb565b61433781856142d6565b93506143478185602086016142e7565b61435081614311565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61439081614138565b82525050565b60006143a28383614387565b60208301905092915050565b6000602082019050919050565b60006143c68261435b565b6143d08185614366565b93506143db83614377565b8060005b8381101561440c5781516143f38882614396565b97506143fe836143ae565b9250506001810190506143df565b5085935050505092915050565b6000610140830160008301516144326000860182614245565b5060208301516144456020860182614245565b5060408301516144586040860182614245565b50606083015161446b60608601826142bc565b50608083015184820360808601526144838282614322565b91505060a083015184820360a086015261449d8282614322565b91505060c08301516144b260c0860182614245565b5060e083015184820360e08601526144ca82826143bb565b9150506101008301516144e1610100860182614387565b506101208301516144f6610120860182614245565b508091505092915050565b600061450d8383614419565b905092915050565b6000602082019050919050565b600061452d82614219565b6145378185614224565b93508360208202850161454985614235565b8060005b8581101561458557848403895281516145668582614501565b945061457183614515565b925060208a0199505060018101905061454d565b50829750879550505050505092915050565b600060208201905081810360008301526145b18184614522565b905092915050565b6000602082840312156145cf576145ce61410e565b5b60006145dd84828501614161565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a0820160008201516146286000850182614387565b50602082015161463b6020850182614245565b50604082015161464e6040850182614245565b5060608201516146616060850182614245565b5060808201516146746080850182614245565b50505050565b60006146868383614612565b60a08301905092915050565b6000602082019050919050565b60006146aa826145e6565b6146b481856145f1565b93506146bf83614602565b8060005b838110156146f05781516146d7888261467a565b97506146e283614692565b9250506001810190506146c3565b5085935050505092915050565b60006020820190508181036000830152614717818461469f565b905092915050565b6002811061472c57600080fd5b50565b60008135905061473e8161471f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261476957614768614744565b5b8235905067ffffffffffffffff81111561478657614785614749565b5b6020830191508360018202830111156147a2576147a161474e565b5b9250929050565b60008060008060008060008060c0898b0312156147c9576147c861410e565b5b60006147d78b828c01614197565b98505060206147e88b828c01614197565b97505060406147f98b828c0161472f565b965050606089013567ffffffffffffffff81111561481a57614819614113565b5b6148268b828c01614753565b9550955050608089013567ffffffffffffffff81111561484957614848614113565b5b6148558b828c01614753565b935093505060a06148688b828c01614197565b9150509295985092959890939650565b60008115159050919050565b61488d81614878565b811461489857600080fd5b50565b6000813590506148aa81614884565b92915050565b600381106148bd57600080fd5b50565b6000813590506148cf816148b0565b92915050565b6000806000606084860312156148ee576148ed61410e565b5b60006148fc86828701614197565b935050602061490d8682870161489b565b925050604061491e868287016148c0565b9150509250925092565b6000610140830160008301516149416000860182614245565b5060208301516149546020860182614245565b5060408301516149676040860182614245565b50606083015161497a60608601826142bc565b50608083015184820360808601526149928282614322565b91505060a083015184820360a08601526149ac8282614322565b91505060c08301516149c160c0860182614245565b5060e083015184820360e08601526149d982826143bb565b9150506101008301516149f0610100860182614387565b50610120830151614a05610120860182614245565b508091505092915050565b60006020820190508181036000830152614a2a8184614928565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000614a6a8383614245565b60208301905092915050565b6000602082019050919050565b6000614a8e82614a32565b614a988185614a3d565b9350614aa383614a4e565b8060005b83811015614ad4578151614abb8882614a5e565b9750614ac683614a76565b925050600181019050614aa7565b5085935050505092915050565b600061016083016000830151614afa6000860182614387565b506020830151614b0d6020860182614245565b506040830151614b206040860182614245565b506060830151614b336060860182614245565b5060808301518482036080860152614b4b82826143bb565b91505060a0830151614b6060a0860182614245565b5060c083015184820360c0860152614b788282614a83565b91505060e083015184820360e0860152614b9282826143bb565b915050610100830151614ba9610100860182614245565b50610120830151614bbe610120860182614245565b50610140830151848203610140860152614bd88282614a83565b9150508091505092915050565b60006020820190508181036000830152614bff8184614ae1565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b614c3c81614878565b82525050565b60038110614c5357614c52614254565b5b50565b6000819050614c6482614c42565b919050565b6000614c7482614c56565b9050919050565b614c8481614c69565b82525050565b600061014083016000830151614ca36000860182614245565b5060208301518482036020860152614cbb8282614322565b91505060408301518482036040860152614cd58282614322565b9150506060830151614cea6060860182614245565b506080830151614cfd6080860182614245565b5060a0830151614d1060a0860182614245565b5060c083015184820360c0860152614d2882826143bb565b91505060e0830151614d3d60e0860182614c33565b50610100830151614d52610100860182614c7b565b50610120830151614d67610120860182614245565b508091505092915050565b6000614d7e8383614c8a565b905092915050565b6000602082019050919050565b6000614d9e82614c07565b614da88185614c12565b935083602082028501614dba85614c23565b8060005b85811015614df65784840389528151614dd78582614d72565b9450614de283614d86565b925060208a01995050600181019050614dbe565b50829750879550505050505092915050565b60006020820190508181036000830152614e228184614d93565b905092915050565b600080600060608486031215614e4357614e4261410e565b5b6000614e5186828701614161565b9350506020614e6286828701614197565b9250506040614e7386828701614197565b9150509250925092565b614e8681614176565b82525050565b6000602082019050614ea16000830184614e7d565b92915050565b600061014083016000830151614ec06000860182614245565b5060208301518482036020860152614ed88282614322565b91505060408301518482036040860152614ef28282614322565b9150506060830151614f076060860182614245565b506080830151614f1a6080860182614245565b5060a0830151614f2d60a0860182614245565b5060c083015184820360c0860152614f4582826143bb565b91505060e0830151614f5a60e0860182614c33565b50610100830151614f6f610100860182614c7b565b50610120830151614f84610120860182614245565b508091505092915050565b60006020820190508181036000830152614fa98184614ea7565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b614fee82614311565b810181811067ffffffffffffffff8211171561500d5761500c614fb6565b5b80604052505050565b6000615020614104565b905061502c8282614fe5565b919050565b600067ffffffffffffffff82111561504c5761504b614fb6565b5b61505582614311565b9050602081019050919050565b82818337600083830152505050565b600061508461507f84615031565b615016565b9050828152602081018484840111156150a05761509f614fb1565b5b6150ab848285615062565b509392505050565b600082601f8301126150c8576150c7614744565b5b81356150d8848260208601615071565b91505092915050565b600080600080600060a086880312156150fd576150fc61410e565b5b600086013567ffffffffffffffff81111561511b5761511a614113565b5b615127888289016150b3565b955050602086013567ffffffffffffffff81111561514857615147614113565b5b615154888289016150b3565b945050604061516588828901614197565b935050606061517688828901614197565b925050608061518788828901614197565b9150509295509295909350565b600080604083850312156151ab576151aa61410e565b5b60006151b985828601614197565b92505060206151ca8582860161472f565b9150509250929050565b6151dd81614138565b82525050565b60006040820190506151f860008301856151d4565b6152056020830184614e7d565b9392505050565b60008151905061521b81614884565b92915050565b6000602082840312156152375761523661410e565b5b60006152458482850161520c565b91505092915050565b600081905092915050565b50565b600061526960008361524e565b915061527482615259565b600082019050919050565b600061528a8261525c565b9150819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806152db57607f821691505b6020821081036152ee576152ed615294565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061535d82614176565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361538f5761538e615323565b5b600182019050919050565b60006153a582614176565b91506153b083614176565b92508282019050808211156153c8576153c7615323565b5b92915050565b60006153d982614176565b91506153e483614176565b92508282039050818111156153fc576153fb615323565b5b92915050565b60008160001c9050919050565b6000819050919050565b600061542c61542783615402565b61540f565b9050919050565b600060ff82169050919050565b600061545361544e83615402565b615433565b9050919050565b60008190508160005260206000209050919050565b6000815461547c816152c3565b61548681866142d6565b945060018216600081146154a157600181146154b7576154ea565b60ff1983168652811515602002860193506154ea565b6154c08561545a565b60005b838110156154e2578154818901526001820191506020810190506154c3565b808801955050505b50505092915050565b600081549050919050565b60008190508160005260206000209050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061554661554183615402565b615513565b9050919050565b60006155598254615533565b9050919050565b6000600182019050919050565b6000615578826154f3565b6155828185614366565b935061558d836154fe565b8060005b838110156155c5576155a28261554d565b6155ac8882614396565b97506155b783615560565b925050600181019050615591565b5085935050505092915050565b6000610140830160008084015490506155ea81615419565b6155f76000870182614245565b506001840154905061560881615419565b6156156020870182614245565b506002840154905061562681615419565b6156336040870182614245565b506003840154905061564481615440565b61565160608701826142bc565b50600484018583036080870152615668838261546f565b9250506005840185830360a0870152615681838261546f565b9250506006840154905061569481615419565b6156a160c0870182614245565b506007840185830360e08701526156b8838261556d565b925050600884015490506156cb81615533565b6156d9610100870182614387565b50600984015490506156ea81615419565b6156f8610120870182614245565b50819250505092915050565b6000602082019050818103600083015261571e81846155d2565b905092915050565b61572f81614878565b82525050565b600060208201905061574a6000830184615726565b92915050565b600061575b82614176565b915061576683614176565b925082820261577481614176565b9150828204841483151761578b5761578a615323565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006157cc82614176565b91506157d783614176565b9250826157e7576157e6615792565b5b828204905092915050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261583f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82615802565b6158498683615802565b95508019841693508086168417925050509392505050565b6000819050919050565b600061588661588161587c84614176565b615861565b614176565b9050919050565b6000819050919050565b6158a08361586b565b6158b46158ac8261588d565b84845461580f565b825550505050565b600090565b6158c96158bc565b6158d4818484615897565b505050565b5b818110156158f8576158ed6000826158c1565b6001810190506158da565b5050565b601f82111561593d5761590e8161545a565b615917846157f2565b81016020851015615926578190505b61593a615932856157f2565b8301826158d9565b50505b505050565b600082821c905092915050565b600061596060001984600802615942565b1980831691505092915050565b6000615979838361594f565b9150826002028217905092915050565b615992826142cb565b67ffffffffffffffff8111156159ab576159aa614fb6565b5b6159b582546152c3565b6159c08282856158fc565b600060209050601f8311600181146159f357600084156159e1578287015190505b6159eb858261596d565b865550615a53565b601f198416615a018661545a565b60005b82811015615a2957848901518255600182019150602085019450602081019050615a04565b86831015615a465784890151615a42601f89168261594f565b8355505b6001600288020188555050505b505050505050565b6000604082019050615a7060008301856151d4565b615a7d60208301846151d4565b9392505050565b600081519050615a9381614180565b92915050565b600060208284031215615aaf57615aae61410e565b5b6000615abd84828501615a84565b91505092915050565b6000606082019050615adb60008301866151d4565b615ae860208301856151d4565b615af56040830184614e7d565b949350505050565b6000606082019050615b126000830186614e7d565b615b1f6020830185614e7d565b615b2c6040830184614e7d565b949350505050565b600061014083016000808401549050615b4c81615419565b615b596000870182614245565b5060018401549050615b6a81615419565b615b776020870182614245565b5060028401549050615b8881615419565b615b956040870182614245565b5060038401549050615ba681615440565b615bb360608701826142bc565b50600484018583036080870152615bca838261546f565b9250506005840185830360a0870152615be3838261546f565b92505060068401549050615bf681615419565b615c0360c0870182614245565b506007840185830360e0870152615c1a838261556d565b92505060088401549050615c2d81615533565b615c3b610100870182614387565b5060098401549050615c4c81615419565b615c5a610120870182614245565b50819250505092915050565b60006020820190508181036000830152615c808184615b34565b905092915050565b615c91816142aa565b82525050565b6000602082019050615cac6000830184615c88565b9291505056fea2646970667358221220c09967baa4a30cc40cba43250dda752f93e29c1f959908fd44ff38dbd8049d5664736f6c63430008140033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 108,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "groupCount",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 113,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "minter",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(MintingInterface)88"
      },
      {
        "astId": 116,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "rate",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 119,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "percentageRewardPerDay",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 121,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "investmentCount",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 123,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "investmentWallet",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 219,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "groupById",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Group)191_storage)"
      },
      {
        "astId": 226,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userAddressToTokenToData",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_address,t_struct(TokenSavingsData)141_storage))"
      },
      {
        "astId": 231,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userAddressToUserData",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(User)168_storage)"
      },
      {
        "astId": 236,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "userInvestments",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_struct(Investment)214_storage)"
      },
      {
        "astId": 241,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "idToInvestment",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_uint256,t_struct(Investment)214_storage)"
      },
      {
        "astId": 245,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "allGroups",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_struct(Group)191_storage)dyn_storage"
      },
      {
        "astId": 249,
        "contract": "contracts/FIS_Protocol.sol:FISContract",
        "label": "allInvestments",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_struct(Investment)214_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Group)191_storage)dyn_storage": {
        "base": "t_struct(Group)191_storage",
        "encoding": "dynamic_array",
        "label": "struct FISContract.Group[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(Investment)214_storage)dyn_storage": {
        "base": "t_struct(Investment)214_storage",
        "encoding": "dynamic_array",
        "label": "struct FISContract.Investment[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(MintingInterface)88": {
        "encoding": "inplace",
        "label": "contract MintingInterface",
        "numberOfBytes": "20"
      },
      "t_enum(GroupVisibility)126": {
        "encoding": "inplace",
        "label": "enum FISContract.GroupVisibility",
        "numberOfBytes": "1"
      },
      "t_enum(Status)130": {
        "encoding": "inplace",
        "label": "enum FISContract.Status",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_address,t_struct(TokenSavingsData)141_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => struct FISContract.TokenSavingsData))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_struct(TokenSavingsData)141_storage)"
      },
      "t_mapping(t_address,t_struct(Investment)214_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.Investment)",
        "numberOfBytes": "32",
        "value": "t_struct(Investment)214_storage"
      },
      "t_mapping(t_address,t_struct(TokenSavingsData)141_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.TokenSavingsData)",
        "numberOfBytes": "32",
        "value": "t_struct(TokenSavingsData)141_storage"
      },
      "t_mapping(t_address,t_struct(User)168_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct FISContract.User)",
        "numberOfBytes": "32",
        "value": "t_struct(User)168_storage"
      },
      "t_mapping(t_uint256,t_struct(Group)191_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FISContract.Group)",
        "numberOfBytes": "32",
        "value": "t_struct(Group)191_storage"
      },
      "t_mapping(t_uint256,t_struct(Investment)214_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct FISContract.Investment)",
        "numberOfBytes": "32",
        "value": "t_struct(Investment)214_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Group)191_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.Group",
        "members": [
          {
            "astId": 170,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 172,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "duration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 174,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "targetAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 177,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "visibility",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(GroupVisibility)126"
          },
          {
            "astId": 179,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "title",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 181,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "description",
            "offset": 0,
            "slot": "5",
            "type": "t_string_storage"
          },
          {
            "astId": 183,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "category",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 186,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "groupMembers",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 188,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "creator",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          },
          {
            "astId": 190,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeCreated",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "320"
      },
      "t_struct(Investment)214_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.Investment",
        "members": [
          {
            "astId": 193,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 195,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "title",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 197,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "description",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 199,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "depositPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 201,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "duration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 203,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "percentInterest",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 206,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investmentParticipants",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 208,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "open",
            "offset": 0,
            "slot": "7",
            "type": "t_bool"
          },
          {
            "astId": 211,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "status",
            "offset": 1,
            "slot": "7",
            "type": "t_enum(Status)130"
          },
          {
            "astId": 213,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "totalDeposit",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_struct(TokenSavingsData)141_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.TokenSavingsData",
        "members": [
          {
            "astId": 132,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 134,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 136,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "saveDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 138,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeSaved",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 140,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokenRewards",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(User)168_storage": {
        "encoding": "inplace",
        "label": "struct FISContract.User",
        "members": [
          {
            "astId": 143,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "walletAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 145,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "telosBalance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 147,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "telosDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 149,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "timeSaved",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 152,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "tokens",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 154,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "rewardsEarned",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 157,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "groups",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 160,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "circle",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 162,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "Goal",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 164,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investmentCollateral",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/FIS_Protocol.sol:FISContract",
            "label": "investments",
            "offset": 0,
            "slot": "10",
            "type": "t_array(t_uint256)dyn_storage"
          }
        ],
        "numberOfBytes": "352"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}